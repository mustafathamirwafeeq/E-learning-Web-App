@model ELearning.Models.UserViewModel

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    string dob = string.Empty;
    if (Model.DateOfBirth.HasValue)
    {
        dob = Model.DateOfBirth.Value.ToString("MM/dd/yyyy");
    }
}
@section Styles
{
    <link href="~/Content/bootstrap-datepicker3.min.css" rel="stylesheet" />
}
<div class="panel panel-warning">
    <div class="panel-heading">
        <h4>@ViewBag.Title</h4>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm("EditUser", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.Username)
                <input type="hidden" id="UploadPath" value="@System.Configuration.ConfigurationManager.AppSettings["ProfileUploadPath"]" />

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBox("DateOfBirth", @dob, new { @class = "form-control text-box single-line" })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @Style = "width:50px;" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CVPath, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <input type="file" id="fileuploadCV" name="fileuploadCV" accept=".doc,.docx,.pdf" />
                        @if (!string.IsNullOrEmpty(Model.CVPath))
                        {
                            <a href="~/CVs/@Model.CVPath">@Model.CVPath</a>
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, new { @class = "col-md-2 control-label" })
                    <div class="col-md-4">
                        <input type="file" id="fileupload" name="fileupload" accept="image/*" multiple="multiple" />
                        <input type="hidden" name="Photo" id="Photo" value="@Model.Photo" />
                        <img style="display:none" id="imgUploadProgress" src="~/Images/ajax-process.gif" />
                    </div>
                    <div class="col-md-6">
                        <img src="@Model.Photo" id="UploadedImages" style='@(String.IsNullOrEmpty(Model.Photo) ? "display:none" : "")' class="img-responsive img-profile" />
                    </div>
                </div>
                @if (Model.Role.Equals("Admin"))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Role, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            <select name="Role" id="Role" class="form-control">
                                <option value="Student">Student</option>
                                <option value="Moderator">Course Moderator</option>
                            </select>
                            @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Role, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.DisplayFor(m => m.Role)
                        </div>
                    </div>
                }
                @if (Model.Role.Equals("Moderator"))
                {
                    <div class="form-group">
                        <label class="col-md-2 control-label">Can do Instructor's Attendance?</label>
                        <div class="col-md-10">
                            @Html.EditorFor(m => m.IsAttendanceAuthorized)
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.IsAttendanceAuthorized)
                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-lg btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "ManageUsers")
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.9.2.js"></script>

    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>

    <script src="~/Scripts/FileUpload/jquery.fileupload.js"></script>
    <script src="~/Scripts/FileUpload/jquery.iframe-transport.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#DateOfBirth').datepicker('setDate', $("#DateOfBirth").val());

            $('#fileupload').fileupload({
                dataType: "json",
                url: "/api/upload?uploadPath=" + $("#UploadPath").val(),
                add: function (e, data) {
                    data.submit();
                },
                start: function (e) {
                    $("#imgUploadProgress").show();
                },
                done: function (e, data) {
                    $("#UploadedImages").attr("src", "/Images/Profiles/" + data.result.name);
                    $("#Photo").val("/Images/Profiles/" + data.result.name);
                    $("#UploadedImages").removeAttr("style");
                    $("#imgUploadProgress").hide();
                },
                progressall: function (e, data) {
                }
            });
        });
    </script>
}
